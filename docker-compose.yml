version: '3.8'

services:
  db:
    image: postgres:14-alpine
    container_name: doc_db
    environment:
      POSTGRES_USER: ${DB_USER:-docuser}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-docpass123}
      POSTGRES_DB: ${DB_NAME:-docmanagement}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - doc_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-docuser}"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: doc_backend
    environment:
      DATABASE_URL: postgresql://${DB_USER:-docuser}:${DB_PASSWORD:-docpass123}@db:5432/${DB_NAME:-docmanagement}
      SECRET_KEY: ${SECRET_KEY:-your-secret-key-change-in-production}
      FERNET_KEY: ${FERNET_KEY:-generate-fernet-key-for-production}
      CORS_ORIGINS: ${CORS_ORIGINS:-http://localhost:3000}
    volumes:
      - ./backend:/app
      - uploads:/app/uploads
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - doc_network
    command: >
      sh -c "
        python app/seed.py &&
        uvicorn main:app --host 0.0.0.0 --port 8000 --reload
      "

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: doc_frontend
    environment:
      VITE_API_URL: ${VITE_API_URL:-http://localhost:8000}
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - doc_network

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: doc_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL:-admin@admin.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-admin}
    ports:
      - "5050:80"
    networks:
      - doc_network
    depends_on:
      - db

volumes:
  postgres_data:
  uploads:

networks:
  doc_network:
    driver: bridge